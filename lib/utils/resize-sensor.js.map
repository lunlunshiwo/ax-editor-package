{
    "version": 3,
    "file": "resize-sensor.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/resize-sensor.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file resize-sensor.js.\n * @author fex\n */\n/* eslint-disable */\n\nclass EventQueue {\n  q: Array<Function> = [];\n\n  add(cb: Function) {\n    this.q.push(cb);\n  }\n\n  call(...args: Array<any>) {\n    this.q.forEach(fn => {\n      fn(...args);\n    });\n  }\n}\n\nfunction getComputedStyle(element: HTMLElement, prop: string) {\n  if ((element as any).currentStyle) {\n    return (element as any).currentStyle[prop];\n  } else if (window.getComputedStyle) {\n    return window.getComputedStyle(element, undefined).getPropertyValue(prop);\n  } else {\n    return element.style[prop as any];\n  }\n}\n\nfunction attachResizeEvent(element: HTMLElement, resized: Function) {\n  if (!(element as any).resizedAttached) {\n    (element as any).resizedAttached = new EventQueue();\n    (element as any).resizedAttached.add(resized);\n  } else if ((element as any).resizedAttached) {\n    (element as any).resizedAttached.add(resized);\n    return;\n  }\n\n  (element as any).resizeSensor = document.createElement('div');\n  (element as any).resizeSensor.className = 'resize-sensor';\n  let style =\n    'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;';\n  let styleChild = 'position: absolute; left: 0; top: 0;';\n\n  (element as any).resizeSensor.style.cssText = style;\n  (element as any).resizeSensor.innerHTML =\n    '<div class=\"resize-sensor-expand\" style=\"' +\n    style +\n    '\">' +\n    '<div style=\"' +\n    styleChild +\n    '\"></div>' +\n    '</div>' +\n    '<div class=\"resize-sensor-shrink\" style=\"' +\n    style +\n    '\">' +\n    '<div style=\"' +\n    styleChild +\n    ' width: 200%; height: 200%\"></div>' +\n    '</div>';\n  element.appendChild((element as any).resizeSensor);\n\n  if (!~['fixed', 'absolute'].indexOf(getComputedStyle(element, 'position'))) {\n    element.style.position = 'relative';\n  }\n\n  let expand = (element as any).resizeSensor.childNodes[0];\n  let expandChild = expand.childNodes[0];\n  let shrink = (element as any).resizeSensor.childNodes[1];\n  let shrinkChild = shrink.childNodes[0];\n\n  let lastWidth: number, lastHeight: number;\n\n  let reset = function() {\n    expandChild.style.width = expand.offsetWidth + 10 + 'px';\n    expandChild.style.height = expand.offsetHeight + 10 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n    shrink.scrollLeft = shrink.scrollWidth;\n    shrink.scrollTop = shrink.scrollHeight;\n    lastWidth = element.offsetWidth;\n    lastHeight = element.offsetHeight;\n  };\n\n  reset();\n\n  let changed = function() {\n    if ((element as any).resizedAttached) {\n      (element as any).resizedAttached.call();\n    }\n  };\n\n  let addEvent = function(el: HTMLElement, name: string, cb: Function) {\n    if ((el as any).attachEvent) {\n      (el as any).attachEvent('on' + name, cb);\n    } else {\n      el.addEventListener(name, cb as any);\n    }\n  };\n\n  let onScroll = function() {\n    if (\n      element.offsetWidth != lastWidth ||\n      element.offsetHeight != lastHeight\n    ) {\n      changed();\n    }\n    reset();\n  };\n\n  addEvent(expand, 'scroll', onScroll);\n  addEvent(shrink, 'scroll', onScroll);\n}\n\nfunction detach(element: HTMLElement) {\n  if ((element as any).resizeSensor) {\n    try {\n      element.removeChild((element as any).resizeSensor);\n    } catch (e) {}\n    delete (element as any).resizeSensor;\n    delete (element as any).resizedAttached;\n  }\n}\n\nexport function resizeSensor(element: HTMLElement, callback: Function) {\n  attachResizeEvent(element, callback);\n  let detached = false;\n\n  return function() {\n    if (detached) return;\n    detached = true;\n    detach(element);\n  };\n}\n"
    ]
}