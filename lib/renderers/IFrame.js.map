{
    "version": 3,
    "file": "IFrame.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/IFrame.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAC1B,sCAAmD;AACnD,oCAAoC;AACpC,0CAAyC;AACzC,oCAAwD;AAOxD;IAAoC,kCAAoC;IAAxE;QAAA,qEAoCC;QAnCC,eAAS,GAAuC,eAAK,CAAC,SAAS,EAAE,CAAC;;IAmCpE,CAAC;IAzBC,uBAAM,GAAN;QACG,IAAI,CAAC,SAAS,CAAC,OAA6B,CAAC,GAAG,GAAI,IAAI,CAAC,SAAS;aAChE,OAA6B,CAAC,GAAG,CAAC;IACvC,CAAC;IAED,uBAAM,GAAN;QACM,IAAA,eAAsE,EAArE,wBAAS,EAAE,YAAG,EAAE,gBAAK,EAAE,kBAAM,EAAE,4BAAW,EAAE,cAAI,EAAE,gBAAmB,CAAC;QAE3E,KAAK,wBACA,KAAK,CACT,CAAC;QAEF,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QAC1C,MAAM,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QAE7C,OAAO,CACL,0CACE,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,IAAI,CAAC,SAAS,EACnB,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,YAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GACxC,CACH,CAAC;IACJ,CAAC;IAjCM,gBAAS,GAAkB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAChD,mBAAY,GAAyB;QAC1C,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,CAAC;KACf,CAAC;IAGF;QADC,iBAAQ;;;;wCAIR;IAsBH,aAAC;CAAA,AApCD,CAAoC,eAAK,CAAC,SAAS,GAoClD;kBApCoB,MAAM;AA0C3B;IAAoC,0CAAM;IAA1C;;IAYA,CAAC;IATC,2CAAkB,GAAlB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,OAAyB,CAAC;QAC9C,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,6CAAoB,GAApB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,OAAyB,CAAC;QAC9C,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAVM,0BAAW,GAAG,sBAAa,CAAC;IADxB,cAAc;QAJ1B,kBAAQ,CAAC;YACR,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,QAAQ;SACf,CAAC;OACW,cAAc,CAY1B;IAAD,qBAAC;CAAA,AAZD,CAAoC,MAAM,GAYzC;AAZY,wCAAc",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {filter} from '../utils/tpl';\nimport {autobind} from '../utils/helper';\nimport {ScopedContext, IScopedContext} from '../Scoped';\n\nexport interface IFrameProps extends RendererProps {\n  className?: string;\n  src?: string;\n}\n\nexport default class IFrame extends React.Component<IFrameProps, object> {\n  IFrameRef: React.RefObject<HTMLIFrameElement> = React.createRef();\n  static propsList: Array<string> = ['src', 'className'];\n  static defaultProps: Partial<IFrameProps> = {\n    className: '',\n    width: '100%',\n    height: '100%',\n    frameBorder: 0\n  };\n\n  @autobind\n  reload() {\n    (this.IFrameRef.current as HTMLIFrameElement).src = (this.IFrameRef\n      .current as HTMLIFrameElement).src;\n  }\n\n  render() {\n    let {className, src, width, height, frameBorder, data, style} = this.props;\n\n    style = {\n      ...style\n    };\n\n    width !== void 0 && (style.width = width);\n    height !== void 0 && (style.height = height);\n\n    return (\n      <iframe\n        className={className}\n        frameBorder={frameBorder}\n        style={style}\n        ref={this.IFrameRef}\n        src={src ? filter(src, data) : undefined}\n      />\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)iframe$/,\n  name: 'iframe'\n})\nexport class IFrameRenderer extends IFrame {\n  static contextType = ScopedContext;\n\n  componentWillMount() {\n    const scoped = this.context as IScopedContext;\n    scoped.registerComponent(this);\n  }\n\n  componentWillUnmount() {\n    const scoped = this.context as IScopedContext;\n    scoped.unRegisterComponent(this);\n  }\n}\n"
    ]
}