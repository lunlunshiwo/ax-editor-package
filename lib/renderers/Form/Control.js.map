{
    "version": 3,
    "file": "Control.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Control.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {IFormStore, IFormItemStore} from '../../store/form';\nimport debouce = require('lodash/debounce');\n\nimport {RendererProps, Renderer} from '../../factory';\nimport {ComboStore, IComboStore, IUniqueGroup} from '../../store/combo';\nimport {anyChanged, promisify, isObject, getVariable} from '../../utils/helper';\nimport {Schema} from '../../types';\nimport {IIRendererStore} from '../../store';\nimport {ScopedContext, IScopedContext} from '../../Scoped';\n\nexport interface ControlProps extends RendererProps {\n  control: {\n    id?: string;\n    name?: string;\n    value?: any;\n    required?: boolean;\n    validations: string | {[propsName: string]: any};\n    validationErrors: {[propsName: string]: any};\n    validateOnChange: boolean;\n    multiple?: boolean;\n    delimiter?: string;\n    joinValues?: boolean;\n    extractValue?: boolean;\n    valueField?: string;\n    labelField?: string;\n    unique?: boolean;\n    pipeIn?: (value: any, data: any) => any;\n    pipeOut?: (value: any, originValue: any, data: any) => any;\n    validate?: (value: any, values: any) => any;\n  } & Schema;\n  formStore: IFormStore;\n  store: IIRendererStore;\n  addHook: (fn: () => any) => void;\n  removeHook: (fn: () => any) => void;\n}\n\nexport default class FormControl extends React.Component<ControlProps> {\n  public model: IFormItemStore | undefined;\n  control: any;\n  hook?: () => any;\n  hook2?: () => any;\n\n  static defaultProps: Partial<ControlProps> = {};\n\n  lazyValidate: Function;\n  componentWillMount() {\n    const {\n      formStore: form,\n      control: {\n        name,\n        id,\n        type,\n        required,\n        validations,\n        validationErrors,\n        unique,\n        value,\n        multiple,\n        delimiter,\n        valueField,\n        labelField,\n        joinValues,\n        extractValue\n      }\n    } = this.props;\n\n    this.getValue = this.getValue.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBulkChange = this.handleBulkChange.bind(this);\n    this.setPrinstineValue = this.setPrinstineValue.bind(this);\n    this.controlRef = this.controlRef.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.lazyValidate = debouce(this.validate.bind(this), 250, {\n      trailing: true,\n      leading: false\n    });\n\n    if (!name) {\n      return;\n    }\n\n    this.model = form.registryItem(name, {\n      id,\n      type,\n      required,\n      unique,\n      value,\n      rules: validations,\n      messages: validationErrors,\n      multiple,\n      delimiter,\n      valueField,\n      labelField,\n      joinValues,\n      extractValue\n    });\n\n    if (\n      this.model.unique &&\n      form.parentStore &&\n      form.parentStore.storeType === ComboStore.name\n    ) {\n      const combo = form.parentStore as IComboStore;\n      combo.bindUniuqueItem(this.model);\n    }\n  }\n\n  componentDidMount() {\n    const {\n      store,\n      formStore: form,\n      control: {name, validate},\n      addHook\n    } = this.props;\n\n    if (name && form !== store) {\n      const value = getVariable(store.data, name);\n      if (typeof value !== 'undefined' && value !== this.getValue()) {\n        this.handleChange(value);\n      }\n    }\n\n    const formItem = this.model as IFormItemStore;\n    if (formItem && validate) {\n      let finalValidate = promisify(validate.bind(formItem));\n      this.hook2 = function() {\n        formItem.clearError('control:valdiate');\n        return finalValidate(form.data, formItem.value).then((ret: any) => {\n          if ((typeof ret === 'string' || Array.isArray(ret)) && ret) {\n            formItem.addError(ret, 'control:valdiate');\n          }\n        });\n      };\n      addHook(this.hook2);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: ControlProps) {\n    const props = this.props;\n    const form = nextProps.formStore;\n\n    if (!nextProps.control.name) {\n      // 把 name 删了, 对 model 做清理\n      this.model && this.disposeModel();\n      this.model = undefined;\n      return;\n    } else if (nextProps.control.name !== props.control.name || !this.model) {\n      // 对 model 做清理\n      this.model && this.disposeModel();\n\n      // name 是后面才有的，比如编辑模式下就会出现。\n      this.model = form.registryItem(nextProps.control.name, {\n        id: nextProps.control.id,\n        type: nextProps.control.type,\n        required: nextProps.control.required,\n        unique: nextProps.control.unique,\n        value: nextProps.control.value,\n        rules: nextProps.control.validations,\n        multiple: nextProps.control.multiple,\n        delimiter: nextProps.control.delimiter,\n        valueField: nextProps.control.valueField,\n        labelField: nextProps.control.labelField,\n        joinValues: nextProps.control.joinValues,\n        extractValue: nextProps.control.extractValue,\n        messages: nextProps.control.validationErrors\n      });\n      // this.forceUpdate();\n    }\n\n    if (\n      this.model &&\n      anyChanged(\n        [\n          'id',\n          'validations',\n          'validationErrors',\n          'value',\n          'required',\n          'unique',\n          'multiple',\n          'delimiter',\n          'valueField',\n          'labelField',\n          'joinValues',\n          'extractValue'\n        ],\n        props.control,\n        nextProps.control\n      )\n    ) {\n      this.model.config({\n        required: nextProps.control.required,\n        id: nextProps.control.id,\n        unique: nextProps.control.unique,\n        value: nextProps.control.value,\n        rules: nextProps.control.validations,\n        multiple: nextProps.control.multiple,\n        delimiter: nextProps.control.delimiter,\n        valueField: nextProps.control.valueField,\n        labelField: nextProps.control.labelField,\n        joinValues: nextProps.control.joinValues,\n        extractValue: nextProps.control.extractValue,\n        messages: nextProps.control.validationErrors\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ControlProps) {\n    const {\n      store,\n      formStore: form,\n      data,\n      control: {name}\n    } = this.props;\n\n    if (!name) {\n      return;\n    }\n\n    // form 里面部分塞 service 的用法\n    let value: any;\n    if (\n      form !== store &&\n      data !== prevProps.data &&\n      (value = getVariable(data as any, name)) !==\n        getVariable(prevProps.data, name)\n    ) {\n      this.handleChange(value);\n    }\n  }\n\n  componentWillUnmount() {\n    this.hook && this.props.removeHook(this.hook);\n    this.hook2 && this.props.removeHook(this.hook2);\n    this.disposeModel();\n  }\n\n  disposeModel() {\n    const {formStore: form} = this.props;\n\n    if (\n      this.model &&\n      this.model.unique &&\n      form.parentStore &&\n      form.parentStore.storeType === ComboStore.name\n    ) {\n      const combo = form.parentStore as IComboStore;\n      combo.unBindUniuqueItem(this.model);\n    }\n\n    this.model && form.unRegistryItem(this.model);\n  }\n\n  controlRef(control: any) {\n    const {addHook, removeHook, formStore: form} = this.props;\n\n    // 因为 control 有可能被 n 层 hoc 包裹。\n    while (control && control.getWrappedInstance) {\n      control = control.getWrappedInstance();\n    }\n\n    if (control && control.validate && this.model) {\n      const formItem = this.model as IFormItemStore;\n      let validate = promisify(control.validate.bind(control));\n      this.hook = function() {\n        formItem.clearError('component:valdiate');\n\n        return validate(form.data, formItem.value).then(ret => {\n          if ((typeof ret === 'string' || Array.isArray(ret)) && ret) {\n            formItem.setError(ret, 'component:valdiate');\n          }\n        });\n      };\n      addHook(this.hook);\n    } else if (!control && this.hook) {\n      removeHook(this.hook);\n      this.hook = undefined;\n    }\n\n    this.control = control;\n  }\n\n  validate() {\n    const {formStore: form} = this.props;\n\n    if (this.model) {\n      if (\n        this.model.unique &&\n        form.parentStore &&\n        form.parentStore.storeType === ComboStore.name\n      ) {\n        const combo = form.parentStore as IComboStore;\n        const group = combo.uniques.get(this.model.name) as IUniqueGroup;\n        group.items.forEach(item => item.validate());\n      } else {\n        this.model.validate(this.hook);\n        form\n          .getItemsByName(this.model.name)\n          .forEach(item => item !== this.model && item.validate());\n      }\n    }\n  }\n\n  handleChange(\n    value: any,\n    submitOnChange: boolean = this.props.control.submitOnChange\n  ) {\n    const {\n      formStore: form,\n      onChange,\n      control: {\n        validateOnChange,\n        name,\n        pipeOut,\n        onChange: onFormItemChange,\n        type\n      }\n    } = this.props;\n\n    // todo 以后想办法不要強耦合类型。\n    if (!this.model || ~['service'].indexOf(type)) {\n      onChange && onChange(...(arguments as any));\n      return;\n    }\n    const oldValue = this.model.value;\n\n    if (pipeOut) {\n      value = pipeOut(value, oldValue, form.data);\n    }\n\n    if (oldValue === value) {\n      return;\n    }\n\n    this.model.changeValue(value);\n\n    if (\n      validateOnChange === true ||\n      (validateOnChange !== false && (form.submited || this.model.validated))\n    ) {\n      this.lazyValidate();\n    } else if (validateOnChange === false && !this.model.valid) {\n      this.model.reset();\n    }\n\n    onFormItemChange && onFormItemChange(value, oldValue, this.model, form);\n    onChange && onChange(value, name, submitOnChange === true);\n  }\n\n  handleBlur(e: any) {\n    const {\n      onBlur,\n      control: {validateOnBlur}\n    } = this.props;\n\n    if (validateOnBlur && this.model) {\n      this.validate();\n    }\n\n    onBlur && onBlur(e);\n  }\n\n  handleBulkChange(\n    values: any,\n    submitOnChange: boolean = this.props.control.submitOnChange\n  ) {\n    const {\n      formStore: form,\n      onChange,\n      control: {validateOnChange, type},\n      onBulkChange\n    } = this.props;\n\n    if (!isObject(values)) {\n      return;\n    } else if (!this.model || ~['service'].indexOf(type)) {\n      onBulkChange && onBulkChange(values);\n      return;\n    }\n\n    let lastKey: string = '',\n      lastValue: any;\n    Object.keys(values).forEach(key => {\n      const value = values[key];\n      lastKey = key;\n      lastValue = value;\n    });\n\n    // is empty\n    if (!lastKey) {\n      return;\n    }\n\n    form.setValues(values);\n\n    if (validateOnChange !== false && (form.submited || this.model.validated)) {\n      this.lazyValidate();\n    }\n\n    onChange && onChange(lastValue, lastKey, submitOnChange === true);\n  }\n\n  setPrinstineValue(value: any) {\n    if (!this.model) {\n      return;\n    }\n\n    this.model.changeValue(value, true);\n  }\n\n  getValue() {\n    const {control, formStore: form} = this.props;\n\n    const model = this.model;\n    // let value:any = model ? (typeof model.value === 'undefined' ? '' : model.value) : (control.value || '');\n    let value: any = model ? model.value : control.value;\n\n    if (control.pipeIn) {\n      value = control.pipeIn(value, form.data);\n    }\n\n    return value;\n  }\n\n  // 兼容老版本用法，新版本直接用 onChange 就可以。\n  setValue(value: any, key?: string) {\n    const {\n      control: {name}\n    } = this.props;\n\n    if (!key || key === name) {\n      this.handleChange(value);\n    } else {\n      this.handleBulkChange({\n        [key]: value\n      });\n    }\n  }\n\n  render() {\n    const {\n      render,\n      control: {pipeIn, pipeOut, ...control},\n      formMode,\n      controlWidth,\n      type,\n      store,\n      data,\n      disabled,\n      ...rest\n    } = this.props;\n\n    const model = this.model;\n    const value = this.getValue();\n\n    return render('', control, {\n      ...rest,\n      key: `${control.name}-${control.type}`, // 很重要：如果不写实际的 control 组件变了，但是 this.control 还是引用的原来那个。\n      defaultSize: controlWidth,\n      disabled: disabled || control.disabled,\n      formItem: model,\n      formMode: control.mode || formMode,\n      ref: this.controlRef,\n      defaultValue: control.value,\n      data: store ? store.data : data,\n      value,\n      formItemValue: value, // 为了兼容老版本的自定义组件\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      setValue: this.setValue,\n      getValue: this.getValue,\n      onBulkChange: this.handleBulkChange,\n      prinstine: model ? model.prinstine : undefined,\n      setPrinstineValue: this.setPrinstineValue\n    }) as JSX.Element;\n  }\n}\n\n@Renderer({\n  test: (path: string) =>\n    /(^|\\/)form(?:\\/.*)?\\/control$/i.test(path) &&\n    !/\\/control\\/control$/i.test(path),\n  name: 'control'\n})\nexport class FormControlRenderer extends FormControl {\n  static displayName = 'Control';\n  static contextType = ScopedContext;\n\n  controlRef(ref: any) {\n    const originRef = this.control;\n    super.controlRef(ref);\n    const scoped = this.context as IScopedContext;\n\n    if (!this.control) {\n      return;\n    }\n\n    if (ref) {\n      scoped.registerComponent(this.control);\n    } else {\n      scoped.unRegisterComponent(originRef);\n    }\n  }\n}\n"
    ]
}