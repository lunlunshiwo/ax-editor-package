{
    "version": 3,
    "file": "RichText.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/RichText.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps} from './Item';\nimport cx from 'classnames';\nimport LazyComponent from '../../components/LazyComponent';\nimport {noop} from '../../utils/helper';\n\nexport interface RichTextProps extends FormControlProps {\n  options?: any;\n}\n\nfunction loadComponent(): Promise<React.ReactType> {\n  return new Promise(resolve =>\n    (require as any)(['../../components/RichText'], (component: any) =>\n      resolve(component.default)\n    )\n  );\n}\n\nexport default class RichTextControl extends React.Component<\n  RichTextProps,\n  any\n> {\n  static defaultProps: Partial<RichTextProps> = {\n    imageEditable: true,\n    reciever: '/api/upload/image',\n    videoReciever: '/api/upload/video',\n    placeholder: '请输入',\n    options: {\n      language: 'zh_cn',\n      toolbarButtonsSM: [\n        'paragraphFormat',\n        'quote',\n        'color',\n        '|',\n        'bold',\n        'italic',\n        'underline',\n        'strikeThrough',\n        '|',\n        'formatOL',\n        'formatUL',\n        'align',\n        '|',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        '|',\n        'undo',\n        'redo',\n        'html'\n      ],\n      toolbarButtonsMD: [\n        'paragraphFormat',\n        'quote',\n        'color',\n        '|',\n        'bold',\n        'italic',\n        'underline',\n        'strikeThrough',\n        '|',\n        'formatOL',\n        'formatUL',\n        'align',\n        '|',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        '|',\n        'undo',\n        'redo',\n        'html'\n      ],\n      toolbarButtons: [\n        'paragraphFormat',\n        'quote',\n        'color',\n        '|',\n        'bold',\n        'italic',\n        'underline',\n        'strikeThrough',\n        '|',\n        'formatOL',\n        'formatUL',\n        'align',\n        '|',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        '|',\n        'undo',\n        'redo',\n        'html'\n      ]\n    }\n  };\n\n  state = {\n    focused: false\n  };\n  config: any = null;\n  constructor(props: RichTextProps) {\n    super(props);\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    this.config = {\n      imageAllowedTypes: ['jpeg', 'jpg', 'png', 'gif'],\n      imageDefaultAlign: 'left',\n      imageEditButtons: props.imageEditable\n        ? [\n            'imageReplace',\n            'imageAlign',\n            'imageRemove',\n            '|',\n            'imageLink',\n            'linkOpen',\n            'linkEdit',\n            'linkRemove',\n            '-',\n            'imageDisplay',\n            'imageStyle',\n            'imageAlt',\n            'imageSize'\n          ]\n        : [],\n      key: props.env.richTextToken,\n      ...props.options,\n      editorClass: props.editorClass,\n      placeholderText: props.placeholder,\n      imageUploadURL: props.reciever,\n      imageUploadParams: {\n        from: 'rich-text'\n      },\n      videoUploadURL: props.videoReciever,\n      videoUploadParams: {\n        from: 'rich-text'\n      },\n      events: {\n        ...(props.options && props.options.events),\n        'froalaEditor.focus': this.handleFocus,\n        'froalaEditor.blur': this.handleBlur\n      }\n    };\n\n    if (props.buttons) {\n      this.config.toolbarButtonsSM = props.buttons;\n      this.config.toolbarButtonsMD = props.buttons;\n      this.config.toolbarButtonsXS = props.buttons;\n      this.config.toolbarButtons = props.buttons;\n    }\n  }\n\n  handleFocus() {\n    this.setState({\n      focused: true\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      focused: false\n    });\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      value,\n      onChange,\n      disabled,\n      size\n    } = this.props;\n\n    return (\n      <div\n        className={cx(`${ns}RichTextControl`, className, {\n          'is-focused': this.state.focused,\n          'is-disabled': disabled\n        })}\n      >\n        <LazyComponent\n          getComponent={loadComponent}\n          model={value}\n          onModelChange={disabled ? noop : onChange}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          config={this.config}\n          disabled={disabled}\n        />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'rich-text',\n  sizeMutable: false\n})\nexport class RichTextControlRenderer extends RichTextControl {}\n"
    ]
}