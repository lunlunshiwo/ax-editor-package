{
    "version": 3,
    "file": "TreeSelect.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/TreeSelect.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport cx from 'classnames';\nimport Overlay from '../../components/Overlay';\nimport PopOver from '../../components/PopOver';\n\nimport {OptionsControl, OptionsControlProps, Option} from './Options';\nimport {Icon} from '../../components/icons';\nimport TreeSelector from '../../components/Tree';\n// @ts-ignore\nimport matchSorter from 'match-sorter';\nimport debouce = require('lodash/debounce');\nimport find = require('lodash/find');\nimport {Api} from '../../types';\nimport {isEffectiveApi} from '../../utils/api';\n\nexport interface TreeSelectProps extends OptionsControlProps {\n  placeholder?: any;\n  autoComplete?: Api;\n}\n\nexport interface TreeSelectState {\n  isOpened: boolean;\n  isFocused: boolean;\n  inputValue: string;\n}\n\nexport default class TreeSelectControl extends React.Component<\n  TreeSelectProps,\n  TreeSelectState\n> {\n  static defaultProps = {\n    placeholder: '请选择',\n    optionsPlaceholder: '暂无数据',\n    multiple: false,\n    clearable: true,\n    rootLabel: '顶级',\n    rootValue: '',\n    showIcon: true,\n    joinValues: true,\n    extractValue: false,\n    delimiter: ',',\n    resetValue: '',\n    spinnerClassName: 'fa fa-spinner fa-spin fa-1x fa-fw'\n  };\n\n  container: React.RefObject<HTMLDivElement>;\n  target: React.RefObject<HTMLDivElement>;\n  input: React.RefObject<HTMLInputElement> = React.createRef();\n\n  cache: {\n    [propName: string]: any;\n  } = {};\n\n  constructor(props: TreeSelectProps) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n      isOpened: false,\n      isFocused: false\n    };\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.clearValue = this.clearValue.bind(this);\n    this.target = React.createRef();\n    this.container = React.createRef();\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n\n    this.loadRemote = debouce(this.loadRemote.bind(this), 250, {\n      trailing: true,\n      leading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadRemote('');\n  }\n\n  open(fn?: () => void) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState(\n      {\n        isOpened: true\n      },\n      fn\n    );\n  }\n\n  close() {\n    this.setState(\n      {\n        isOpened: false,\n        inputValue: this.props.multiple ? this.state.inputValue : ''\n      },\n      () => this.loadRemote(this.state.inputValue)\n    );\n  }\n\n  handleFocus() {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      isFocused: false\n    });\n  }\n\n  handleClick() {\n    this.state.isOpened\n      ? this.close()\n      : this.open(() => this.input.current && this.input.current.focus());\n  }\n\n  handleKeyPress(e: React.KeyboardEvent) {\n    if (e.key === ' ') {\n      this.handleClick();\n    }\n  }\n\n  validate(): any {\n    const {value, minLength, maxLength, delimiter} = this.props;\n\n    let curValue = Array.isArray(value)\n      ? value\n      : (value ? String(value) : '').split(delimiter || ',');\n    if (minLength && curValue.length < minLength) {\n      return `已选择数量低于设定的最小个数${minLength}，请选择更多的选项。`;\n    } else if (maxLength && curValue.length > maxLength) {\n      return `已选择数量超出设定的最大个数${maxLength}，请取消选择超出的选项。`;\n    }\n  }\n\n  removeItem(index: number, e?: React.MouseEvent<HTMLElement>) {\n    const {\n      selectedOptions,\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField,\n      onChange,\n      disabled\n    } = this.props;\n\n    e && e.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    const items = selectedOptions.concat();\n    items.splice(index, 1);\n\n    let value: any = items;\n\n    if (joinValues) {\n      value = items\n        .map((item: any) => item[valueField || 'value'])\n        .join(delimiter || ',');\n    } else if (extractValue) {\n      value = items.map((item: any) => item[valueField || 'value']);\n    }\n\n    onChange(value);\n  }\n\n  handleChange(value: any) {\n    const {onChange, multiple} = this.props;\n\n    if (!multiple) {\n      this.close();\n    }\n\n    multiple || !this.state.inputValue\n      ? onChange(value)\n      : this.setState(\n          {\n            inputValue: ''\n          },\n          () => onChange(value)\n        );\n  }\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const {autoComplete, data} = this.props;\n\n    this.setState(\n      {\n        inputValue: e.currentTarget.value\n      },\n      isEffectiveApi(autoComplete, data)\n        ? () => this.loadRemote(this.state.inputValue)\n        : undefined\n    );\n  }\n\n  handleInputKeyDown(event: React.KeyboardEvent) {\n    const inputValue = this.state.inputValue;\n    const {multiple, selectedOptions} = this.props;\n\n    if (\n      event.key === 'Backspace' &&\n      !inputValue &&\n      selectedOptions.length &&\n      multiple\n    ) {\n      this.removeItem(selectedOptions.length - 1);\n    }\n  }\n\n  clearValue() {\n    const {onChange, resetValue} = this.props;\n\n    onChange(typeof resetValue === 'undefined' ? '' : resetValue);\n  }\n\n  filterOptions(options: Array<Option>, keywords: string): Array<Option> {\n    const {labelField, valueField} = this.props;\n\n    return options.map(option => {\n      option = {\n        ...option\n      };\n      option.visible = !!matchSorter([option], keywords, {\n        keys: [labelField || 'label', valueField || 'value']\n      }).length;\n\n      if (!option.visible && option.children) {\n        option.children = this.filterOptions(option.children, keywords);\n        const visibleCount = option.children.filter(item => item.visible)\n          .length;\n        option.visible = !!visibleCount;\n      }\n\n      option.visible && (option.collapsed = false);\n      return option;\n    });\n  }\n\n  loadRemote(input: string) {\n    const {autoComplete, env, data, setOptions, setLoading} = this.props;\n\n    if (!isEffectiveApi(autoComplete, data)) {\n      return;\n    } else if (!env || !env.fetcher) {\n      throw new Error('fetcher is required');\n    }\n\n    if (this.cache[input] || ~input.indexOf(\"'\") /*中文没输完 233*/) {\n      let options = this.cache[input] || [];\n      let combinedOptions = this.mergeOptions(options);\n      setOptions(combinedOptions);\n\n      return Promise.resolve({\n        options: combinedOptions\n      });\n    }\n\n    setLoading(true);\n    return env\n      .fetcher(autoComplete, {\n        ...data,\n        term: input,\n        value: input\n      })\n      .then(ret => {\n        let options = (ret.data && (ret.data as any).options) || ret.data || [];\n        this.cache[input] = options;\n        let combinedOptions = this.mergeOptions(options);\n        setOptions(combinedOptions);\n\n        return Promise.resolve({\n          options: combinedOptions\n        });\n      })\n      .finally(() => setLoading(false));\n  }\n\n  mergeOptions(options: Array<object>) {\n    const {selectedOptions} = this.props;\n    let combinedOptions = options.concat();\n\n    if (Array.isArray(selectedOptions) && selectedOptions.length) {\n      selectedOptions.forEach(option => {\n        if (\n          !find(combinedOptions, (item: Option) => item.value == option.value)\n        ) {\n          combinedOptions.push({\n            ...option,\n            visible: false\n          });\n        }\n      });\n    }\n    return combinedOptions;\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  renderValues() {\n    const {\n      classPrefix: ns,\n      selectedOptions,\n      multiple,\n      labelField,\n      disabled,\n      placeholder,\n      classnames: cx\n    } = this.props;\n\n    if ((!multiple || !selectedOptions.length) && this.state.inputValue) {\n      return null;\n    }\n\n    return selectedOptions.length ? (\n      selectedOptions.map((item, index) =>\n        multiple ? (\n          <div\n            key={index}\n            className={cx(`TreeSelect-value`, {\n              disabled\n            })}\n          >\n            <span\n              className={cx('TreeSelect-valueIcon')}\n              onClick={this.removeItem.bind(this, index)}\n            >\n              ×\n            </span>\n            <span className={cx('TreeSelect-valueLabel')}>\n              {item[labelField || 'label']}\n            </span>\n          </div>\n        ) : (\n          <div className={cx('TreeSelect-value')} key={index}>\n            {item[labelField || 'label']}\n          </div>\n        )\n      )\n    ) : (\n      <span key=\"placeholder\" className={cx('TreeSelect-placeholder')}>\n        {placeholder}\n      </span>\n    );\n  }\n\n  renderOuter() {\n    const {\n      value,\n      disabled,\n      joinValues,\n      extractValue,\n      delimiter,\n      placeholder,\n      options,\n      multiple,\n      valueField,\n      initiallyOpen,\n      unfoldedLevel,\n      withChildren,\n      rootLabel,\n      cascade,\n      rootValue,\n      showIcon,\n      showRadio,\n      popOverContainer,\n      onlyChildren,\n      classPrefix: ns,\n      optionsPlaceholder,\n      searchable,\n      autoComplete,\n      maxLength,\n      minLength\n    } = this.props;\n\n    let filtedOptions =\n      !isEffectiveApi(autoComplete) && searchable && this.state.inputValue\n        ? this.filterOptions(options, this.state.inputValue)\n        : options;\n\n    return (\n      <Overlay\n        container={popOverContainer || (() => this.container.current)}\n        target={() => this.target.current}\n        show\n      >\n        <PopOver\n          classPrefix={ns}\n          className={`${ns}TreeSelect-popover`}\n          style={{\n            minWidth: this.target.current\n              ? this.target.current.offsetWidth\n              : undefined\n          }}\n          onHide={this.close}\n          overlay\n        >\n          <TreeSelector\n            classPrefix={ns}\n            onlyChildren={onlyChildren}\n            valueField={valueField}\n            disabled={disabled}\n            onChange={this.handleChange}\n            joinValues={joinValues}\n            extractValue={extractValue}\n            delimiter={delimiter}\n            placeholder={optionsPlaceholder}\n            options={filtedOptions}\n            highlightTxt={this.state.inputValue}\n            multiple={multiple}\n            initiallyOpen={initiallyOpen}\n            unfoldedLevel={unfoldedLevel}\n            withChildren={withChildren}\n            rootLabel={rootLabel}\n            rootValue={rootValue}\n            showIcon={showIcon}\n            showRadio={showRadio}\n            cascade={cascade}\n            foldedField=\"collapsed\"\n            hideRoot\n            value={value || ''}\n            labelField=\"label\"\n            maxLength={maxLength}\n            minLength={minLength}\n          />\n        </PopOver>\n      </Overlay>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      disabled,\n      spinnerClassName,\n      inline,\n      loading,\n      multiple,\n      value,\n      clearable,\n      classPrefix: ns,\n      classnames: cx,\n      searchable,\n      autoComplete,\n      selectedOptions\n    } = this.props;\n\n    return (\n      <div ref={this.container} className={cx(`TreeSelectControl`, className)}>\n        <div\n          tabIndex={0}\n          onKeyPress={this.handleKeyPress}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          ref={this.target}\n          className={cx(`TreeSelect`, {\n            'TreeSelect--inline': inline,\n            'TreeSelect--single': !multiple,\n            'TreeSelect--multi': multiple,\n            'TreeSelect--searchable':\n              searchable || isEffectiveApi(autoComplete),\n            'is-opened': this.state.isOpened,\n            'is-focused': this.state.isFocused,\n            'is-disabled': disabled\n          })}\n        >\n          <div onClick={this.handleClick} className={cx('TreeSelect-input')}>\n            <div className={cx('TreeSelect-valueWrap')}>\n              {this.renderValues()}\n\n              {searchable || isEffectiveApi(autoComplete) ? (\n                <input\n                  onChange={this.handleInputChange}\n                  value={this.state.inputValue}\n                  ref={this.input}\n                  onKeyDown={this.handleInputKeyDown}\n                  // {...getInputProps({\n                  //     className: `${ns}Select-input`,\n                  //     onFocus: this.onFocus,\n                  //     onBlur: this.onBlur,\n                  //     onKeyDown: (event) => {\n                  //         if (event.key === 'Backspace' && !inputValue) {\n                  //             this.removeItem(value.length - 1);\n                  //         }\n                  //     },\n                  //     onChange: this.handleInputChange,\n                  //     ref: this.inputRef\n                  // })}\n                />\n              ) : null}\n            </div>\n\n            {clearable && !disabled && selectedOptions.length ? (\n              <a onClick={this.clearValue} className={`${ns}TreeSelect-clear`}>\n                <Icon icon=\"close\" className=\"icon\" />\n              </a>\n            ) : null}\n\n            {loading ? (\n              <span className={cx('TreeSelect-spinner')}>\n                <i className={spinnerClassName} />\n              </span>\n            ) : null}\n            <span className={cx('TreeSelect-arrow')} />\n          </div>\n\n          {this.state.isOpened ? this.renderOuter() : null}\n        </div>\n      </div>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'tree-select'\n})\nexport class TreeSelectControlRenderer extends TreeSelectControl {}\n"
    ]
}