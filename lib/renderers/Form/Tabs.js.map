{
    "version": 3,
    "file": "Tabs.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Tabs.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAC1B,yCAAsD;AAEtD,yDAA2B;AAS3B;IAAkC,wCAA+B;IAK/D,sBAAY,KAAgB;QAA5B,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC7C,CAAC;IAED,gCAAS,GAAT,UAAU,GAAQ,EAAE,EAAU;YAAT,YAAG;QAChB,IAAA,eAOQ,EANZ,oCAAe,EACf,sBAAQ,EACR,kCAAc,EACd,gBAAK,EACL,kBAAM,EACN,kBACY,CAAC;QAEf,IACE,eAAe;YACf,CAAC,GAAG,CAAC,IAAI;YACT,CAAC,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,EAC1C;YACA,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,YAAS,GAAG,CAAC,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAE,CAAC,IAC5D,eAAe,CAAC,GAAG,EAAG,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;gBAChE,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,QAAQ;gBAC1B,UAAU,EAAE,GAAG,CAAC,UAAU,IAAI,cAAc;aAC7C,CAAC,CACE,CACP,CAAC;SACH;QAED,OAAO,MAAM,CAAC,SAAO,GAAK,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IAC1D,CAAC;IAED,6BAAM,GAAN;QACE,IAAM,eAAsC,EAArC,sBAAQ,EAAE,cAAI,EAAE,+CAAqB,CAAC;QAE7C,OAAO,8BAAC,cAAI,uBAAK,IAAI,IAAE,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC;IACvD,CAAC;IAzCM,yBAAY,GAAG;QACpB,YAAY,EAAE,KAAK,CAAC,eAAe;KACpC,CAAC;IAHS,YAAY;QALxB,kBAAQ,CAAC;YACR,IAAI,EAAE,oCAAoC;YAC1C,MAAM,EAAE,CAAC,GAAG;YACZ,IAAI,EAAE,cAAc;SACrB,CAAC;;OACW,YAAY,CA2CxB;IAAD,mBAAC;CAAA,AA3CD,CAAkC,eAAK,CAAC,SAAS,GA2ChD;AA3CY,oCAAY",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport {Schema} from '../../types';\nimport Tabs from '../Tabs';\n\nexport interface TabsProps extends RendererProps {}\n\n@Renderer({\n  test: /(^|\\/)form(?:.+)?\\/control\\/tabs$/i,\n  weight: -100,\n  name: 'tabs-control'\n})\nexport class TabsRenderer extends React.Component<TabsProps, any> {\n  static defaultProps = {\n    mountOnEnter: false // form 中的不按需渲染\n  };\n\n  constructor(props: TabsProps) {\n    super(props);\n    this.renderTab = this.renderTab.bind(this);\n  }\n\n  renderTab(tab: any, {key}: any) {\n    const {\n      renderFormItems,\n      formMode,\n      formHorizontal,\n      $path,\n      render,\n      classnames: cx\n    } = this.props;\n\n    if (\n      renderFormItems &&\n      !tab.type &&\n      (tab.controls || tab.fieldSet || tab.tabs)\n    ) {\n      return (\n        <div className={cx(`Form--${tab.mode || formMode || 'normal'}`)}>\n          {renderFormItems(tab, ($path as string).replace(/^.*form\\//, ''), {\n            mode: tab.mode || formMode,\n            horizontal: tab.horizontal || formHorizontal\n          })}\n        </div>\n      );\n    }\n\n    return render(`tab/${key}`, tab.body || tab.tab || tab);\n  }\n\n  render() {\n    const {children, type, ...rest} = this.props;\n\n    return <Tabs {...rest} tabRender={this.renderTab} />;\n  }\n}\n"
    ]
}