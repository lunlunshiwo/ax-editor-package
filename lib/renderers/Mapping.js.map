{
    "version": 3,
    "file": "Mapping.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Mapping.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAC1B,sCAAmD;AAYnD;IAAkC,wCAAqC;IAAvE;;IA6BA,CAAC;IArBC,6BAAM,GAAN;QACQ,IAAA,eAOQ,EANZ,wBAAS,EACT,gBAAK,EACL,4BAAW,EACX,YAAG,EACH,kBAAM,EACN,kBACY,CAAC;QAEf,IAAI,SAAS,GAAoB,CAC/B,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAClD,CAAC;QACF,IAAI,GAAG,GAAG,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAEvC,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YACjE,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SACjD;QAED,OAAO,wCAAM,SAAS,EAAE,EAAE,CAAC,cAAc,EAAE,SAAS,CAAC,IAAG,SAAS,CAAQ,CAAC;IAC5E,CAAC;IA3BM,yBAAY,GAA0B;QAC3C,WAAW,EAAE,GAAG;QAChB,GAAG,EAAE;YACH,GAAG,EAAE,KAAK;SACX;KACF,CAAC;IAuBJ,mBAAC;CAAA,AA7BD,CAAkC,eAAK,CAAC,SAAS,GA6BhD;AA7BY,oCAAY;AAmCzB;IAA0C,gDAAY;IAAtD;;IAAwD,CAAC;IAA5C,oBAAoB;QAJhC,kBAAQ,CAAC;YACR,IAAI,EAAE,wBAAwB;YAC9B,IAAI,EAAE,SAAS;SAChB,CAAC;OACW,oBAAoB,CAAwB;IAAD,2BAAC;CAAA,AAAzD,CAA0C,YAAY,GAAG;AAA5C,oDAAoB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {ServiceStore, IServiceStore} from '../store/service';\nimport {Api, SchemaNode, PlainObject} from '../types';\nimport {filter} from '../utils/tpl';\nimport cx from 'classnames';\n\nexport interface MappingProps extends RendererProps {\n  className?: string;\n  placeholder?: string;\n  map: PlainObject;\n}\n\nexport class MappingField extends React.Component<MappingProps, object> {\n  static defaultProps: Partial<MappingProps> = {\n    placeholder: '-',\n    map: {\n      '*': '通配值'\n    }\n  };\n\n  render() {\n    const {\n      className,\n      value,\n      placeholder,\n      map,\n      render,\n      classnames: cx\n    } = this.props;\n\n    let viewValue: React.ReactNode = (\n      <span className=\"text-muted\">{placeholder}</span>\n    );\n    let key = value === true ? '1' : value;\n\n    if (typeof value !== 'undefined' && map && (map[key] || map['*'])) {\n      viewValue = render('tpl', map[key] || map['*']);\n    }\n\n    return <span className={cx('MappingField', className)}>{viewValue}</span>;\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)(?:map|mapping)$/,\n  name: 'mapping'\n})\nexport class MappingFieldRenderer extends MappingField {}\n"
    ]
}