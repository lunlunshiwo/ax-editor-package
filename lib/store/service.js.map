{
    "version": 3,
    "file": "service.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/service.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {types, getParent, flow, getEnv, getRoot} from 'mobx-state-tree';\nimport {iRendererStore} from './iRenderer';\nimport {IRendererStore} from './index';\nimport {Api, ApiObject, Payload, fetchOptions} from '../types';\nimport {extendObject, isEmpty} from '../utils/helper';\n\nexport const ServiceStore = iRendererStore\n  .named('ServiceStore')\n  .props({\n    msg: '',\n    error: false,\n    fetching: false,\n    saving: false,\n    busying: false,\n    checking: false,\n    initializing: false,\n    schema: types.optional(types.frozen(), null),\n    schemaKey: ''\n  })\n  .views(self => ({\n    get loading() {\n      return self.fetching || self.saving || self.busying || self.initializing;\n    }\n  }))\n  .actions(self => {\n    let fetchCancel: Function | null;\n    let fetchSchemaCancel: Function | null;\n\n    function markFetching(fetching = true) {\n      self.fetching = fetching;\n    }\n\n    function markSaving(saving = true) {\n      self.saving = saving;\n    }\n\n    function markBusying(busying = true) {\n      self.busying = busying;\n    }\n\n    function reInitData(data: object | undefined) {\n      const newData = extendObject(self.pristine, data);\n      self.data = self.pristine = newData;\n    }\n\n    function updateMessage(msg?: string, error: boolean = false) {\n      self.msg = (msg && String(msg)) || '';\n      self.error = error;\n    }\n\n    function clearMessage() {\n      updateMessage('');\n    }\n\n    const fetchInitData: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* getInitData(\n      api: string,\n      data: object,\n      options?: fetchOptions\n    ) {\n      try {\n        if (fetchCancel) {\n          fetchCancel();\n          fetchCancel = null;\n          self.fetching = false;\n        }\n\n        if (self.fetching) {\n          return;\n        }\n\n        (options && options.silent) || markFetching(true);\n        const json: Payload = yield (getRoot(self) as IRendererStore).fetcher(\n          api,\n          data,\n          {\n            ...options,\n            cancelExecutor: (executor: Function) => (fetchCancel = executor)\n          }\n        );\n        fetchCancel = null;\n\n        if (!json.ok) {\n          updateMessage(json.msg || (options && options.errorMessage), true);\n          (getRoot(self) as IRendererStore).notify('error', json.msg);\n        } else {\n          reInitData({\n            ...self.data,\n            ...json.data\n          });\n          self.updatedAt = Date.now();\n          self.hasRemoteData = true;\n          if (options && options.onSuccess) {\n            const ret = options.onSuccess(json);\n\n            if (ret && ret.then) {\n              yield ret;\n            }\n          }\n\n          updateMessage(json.msg || (options && options.successMessage));\n\n          // 配置了获取成功提示后提示，默认是空不会提示。\n          options &&\n            options.successMessage &&\n            (getRoot(self) as IRendererStore).notify('success', self.msg);\n        }\n\n        markFetching(false);\n        return json;\n      } catch (e) {\n        const root = getRoot(self) as IRendererStore;\n        if (root.storeType !== 'RendererStore') {\n          // 已经销毁了，不管这些数据了。\n          return;\n        }\n\n        if (root.isCancel(e)) {\n          return;\n        }\n\n        markFetching(false);\n        e.stack && console.error(e.stack);\n        root.notify('error', e.message || e);\n      }\n    });\n\n    const fetchData: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* getInitData(\n      api: string,\n      data: object,\n      options?: fetchOptions\n    ) {\n      try {\n        if (fetchCancel) {\n          fetchCancel();\n          fetchCancel = null;\n          self.fetching = false;\n        }\n\n        if (self.fetching) {\n          return;\n        }\n\n        (options && options.silent) || markFetching(true);\n        const json: Payload = yield ((getRoot(\n          self\n        ) as IRendererStore) as IRendererStore).fetcher(api, data, {\n          ...options,\n          cancelExecutor: (executor: Function) => (fetchCancel = executor)\n        });\n        fetchCancel = null;\n\n        if (!isEmpty(json.data) || json.ok) {\n          json.data && self.updateData(json.data);\n          self.updatedAt = Date.now();\n          self.hasRemoteData = true;\n        }\n\n        if (!json.ok) {\n          updateMessage(json.msg || (options && options.errorMessage), true);\n          (getRoot(self) as IRendererStore).notify('error', self.msg);\n        } else {\n          if (options && options.onSuccess) {\n            const ret = options.onSuccess(json);\n\n            if (ret && ret.then) {\n              yield ret;\n            }\n          }\n\n          updateMessage(json.msg || (options && options.successMessage));\n\n          // 配置了获取成功提示后提示，默认是空不会提示。\n          options &&\n            options.successMessage &&\n            (getRoot(self) as IRendererStore).notify('success', self.msg);\n        }\n\n        markFetching(false);\n        return json;\n      } catch (e) {\n        const root = getRoot(self) as IRendererStore;\n        if (root.storeType !== 'RendererStore') {\n          // 已经销毁了，不管这些数据了。\n          return;\n        }\n\n        if (root.isCancel(e)) {\n          return;\n        }\n\n        markFetching(false);\n        e.stack && console.error(e.stack);\n        root.notify('error', e.message || e);\n      }\n    });\n\n    const saveRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* saveRemote(\n      api: string,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options\n        };\n\n        if (self.saving) {\n          return;\n        }\n        markSaving(true);\n\n        const json: Payload = yield (getRoot(self) as IRendererStore).fetcher(\n          api,\n          data,\n          options\n        );\n\n        if (!isEmpty(json.data) || json.ok) {\n          json.data && self.updateData(json.data);\n          self.updatedAt = Date.now();\n        }\n\n        if (!json.ok) {\n          updateMessage(\n            json.msg || (options && options.errorMessage) || '保存失败',\n            true\n          );\n          throw new Error(self.msg);\n        } else {\n          if (options && options.onSuccess) {\n            const ret = options.onSuccess(json);\n\n            if (ret && ret.then) {\n              yield ret;\n            }\n          }\n\n          updateMessage(json.msg || (options && options.successMessage));\n          self.msg &&\n            (getRoot(self) as IRendererStore).notify('success', self.msg);\n        }\n\n        markSaving(false);\n        return json.data;\n      } catch (e) {\n        self.saving = false;\n        // console.log(e.stack);\n        (getRoot(self) as IRendererStore).notify('error', e.message || e);\n\n        throw e;\n      }\n    });\n\n    const fetchSchema: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* fetchSchema(\n      api: string,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options,\n          cancelExecutor: (executor: Function) => (fetchSchemaCancel = executor)\n        };\n\n        if (fetchSchemaCancel) {\n          fetchSchemaCancel();\n          fetchSchemaCancel = null;\n          self.initializing = false;\n        }\n\n        if (self.initializing) {\n          return;\n        }\n\n        self.initializing = true;\n\n        if (typeof api === 'string') {\n          api += (~api.indexOf('?') ? '&' : '?') + '_replace=1';\n        } else {\n          api = {\n            ...(api as any),\n            url:\n              (api as ApiObject).url +\n              (~(api as ApiObject).url.indexOf('?') ? '&' : '?') +\n              '_replace=1'\n          };\n        }\n\n        const json: Payload = yield (getRoot(self) as IRendererStore).fetcher(\n          api,\n          data,\n          options\n        );\n        fetchSchemaCancel = null;\n\n        if (!json.ok) {\n          updateMessage(\n            json.msg || (options && options.errorMessage) || '获取失败，请重试',\n            true\n          );\n          (getRoot(self) as IRendererStore).notify('error', self.msg);\n        } else {\n          if (json.data) {\n            self.schema = json.data;\n            self.schemaKey = '' + Date.now();\n          }\n          updateMessage(json.msg || (options && options.successMessage));\n\n          // 配置了获取成功提示后提示，默认是空不会提示。\n          options &&\n            options.successMessage &&\n            (getRoot(self) as IRendererStore).notify('success', self.msg);\n        }\n\n        self.initializing = false;\n      } catch (e) {\n        const root = getRoot(self) as IRendererStore;\n        if (root.storeType !== 'RendererStore') {\n          // 已经销毁了，不管这些数据了。\n          return;\n        }\n\n        self.initializing = false;\n\n        if (root.isCancel(e)) {\n          return;\n        }\n\n        e.stack && console.error(e.stack);\n        root.notify('error', e.message || e);\n      }\n    });\n\n    const checkRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* checkRemote(\n      api: string,\n      data: object,\n      options?: fetchOptions\n    ) {\n      if (self.checking) {\n        return;\n      }\n\n      try {\n        self.checking = true;\n        const json: Payload = yield (getRoot(self) as IRendererStore).fetcher(\n          api,\n          data,\n          options\n        );\n        json.ok && self.updateData(json.data);\n\n        if (!json.ok) {\n          throw new Error(json.msg);\n        }\n\n        return json.data;\n      } finally {\n        self.checking = false;\n      }\n    });\n\n    return {\n      markFetching,\n      markSaving,\n      markBusying,\n      fetchInitData,\n      fetchData,\n      reInitData,\n      updateMessage,\n      clearMessage,\n      saveRemote,\n      fetchSchema,\n      checkRemote\n    };\n  });\n\nexport type IServiceStore = typeof ServiceStore.Type;\n"
    ]
}