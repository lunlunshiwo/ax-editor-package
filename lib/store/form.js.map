{
    "version": 3,
    "file": "form.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/form.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {types, getEnv, flow, getRoot, detach} from 'mobx-state-tree';\nimport debounce = require('lodash/debounce');\nimport {ServiceStore} from './service';\nimport {FormItemStore, IFormItemStore, SFormItemStore} from './formItem';\nimport {Api, fetchOptions, Payload} from '../types';\nimport {\n  getVariable,\n  setVariable,\n  deleteVariable,\n  cloneObject,\n  createObject,\n  difference,\n  guid,\n  isObject,\n  isEmpty,\n  mapObject\n} from '../utils/helper';\nimport {IComboStore} from './combo';\nimport isEqual = require('lodash/isEqual');\nimport {IRendererStore} from '.';\n\nclass ServerError extends Error {\n  type = 'ServerError';\n}\n\nexport const FormStore = ServiceStore.named('FormStore')\n  .props({\n    inited: false,\n    validated: false,\n    submited: false,\n    submiting: false,\n    validating: false,\n    items: types.optional(types.array(types.late(() => FormItemStore)), []),\n    canAccessSuperData: true,\n    persistData: false\n  })\n  .views(self => ({\n    get loading() {\n      return self.saving || self.fetching;\n    },\n\n    get errors() {\n      let errors: {\n        [propName: string]: Array<string>;\n      } = {};\n\n      self.items.forEach(item => {\n        if (!item.valid) {\n          errors[item.name] = Array.isArray(errors[item.name])\n            ? errors[item.name].concat(item.errors)\n            : item.errors.concat();\n        }\n      });\n\n      return errors;\n    },\n\n    getValueByName(name: string) {\n      return getVariable(self.data, name, self.canAccessSuperData);\n    },\n\n    getPristineValueByName(name: string) {\n      return getVariable(self.pristine, name);\n    },\n\n    getItemById(id: string) {\n      return self.items.find(item => item.id === id);\n    },\n\n    getItemByName(name: string) {\n      return self.items.find(item => item.name === name);\n    },\n\n    getItemsByName(name: string) {\n      return self.items.filter(item => item.name === name);\n    },\n\n    get valid() {\n      return self.items.every(item => item.valid);\n    },\n\n    get isPristine() {\n      return isEqual(self.pristine, self.data);\n    }\n  }))\n  .actions(self => {\n    function setValues(values: object, tag?: object) {\n      self.updateData(values, tag);\n\n      // 同步 options\n      syncOptions();\n    }\n\n    function setValueByName(\n      name: string,\n      value: any,\n      isPristine: boolean = false,\n      force: boolean = false\n    ) {\n      // 没有变化就不跑了。\n      const origin = getVariable(self.data, name, false);\n\n      const prev = self.data;\n      const data = cloneObject(self.data);\n\n      if (value !== origin) {\n        if (prev.__prev) {\n          // 基于之前的 __prev 改\n          const prevData = cloneObject(prev.__prev);\n          setVariable(prevData, name, origin);\n          Object.defineProperty(data, '__prev', {\n            value: prevData,\n            enumerable: false,\n            configurable: false,\n            writable: false\n          });\n        } else {\n          Object.defineProperty(data, '__prev', {\n            value: {...prev},\n            enumerable: false,\n            configurable: false,\n            writable: false\n          });\n        }\n      } else if (!force) {\n        return;\n      }\n\n      setVariable(data, name, value);\n\n      if (isPristine) {\n        const pristine = cloneObject(self.pristine);\n        setVariable(pristine, name, value);\n        self.pristine = pristine;\n      }\n\n      if (!data.__pristine) {\n        Object.defineProperty(data, '__pristine', {\n          value: self.pristine,\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      }\n\n      self.data = data;\n\n      if (self.persistData) {\n        setPersistData();\n      }\n\n      // 同步 options\n      syncOptions();\n    }\n\n    function deleteValueByName(name: string) {\n      const prev = self.data;\n      const data = cloneObject(self.data);\n\n      if (prev.__prev) {\n        // 基于之前的 __prev 改\n        const prevData = cloneObject(prev.__prev);\n        setVariable(prevData, name, getVariable(prev, name));\n        Object.defineProperty(data, '__prev', {\n          value: prevData,\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      } else {\n        Object.defineProperty(data, '__prev', {\n          value: {...prev},\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      }\n\n      deleteVariable(data, name);\n      self.data = data;\n    }\n\n    function trimValues() {\n      let data = mapObject(self.data, (item: any) =>\n        typeof item === 'string' ? item.trim() : item\n      );\n      self.updateData(data);\n    }\n\n    function syncOptions() {\n      self.items.forEach(item => item.syncOptions());\n    }\n\n    const saveRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* saveRemote(\n      api: string,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options\n        };\n\n        if (options && options.beforeSend) {\n          let ret = options.beforeSend(data);\n\n          if (ret && ret.then) {\n            ret = yield ret;\n          }\n\n          if (ret === false) {\n            return;\n          }\n        }\n\n        self.markSaving(true);\n        const json: Payload = yield (getRoot(self) as IRendererStore).fetcher(\n          api,\n          data,\n          options\n        );\n\n        // 失败也同样 merge，如果有数据的话。\n        if (!isEmpty(json.data) || json.ok) {\n          setValues(json.data, {\n            __saved: Date.now()\n          });\n          self.updatedAt = Date.now();\n        }\n\n        if (!json.ok) {\n          // 验证错误\n          if (json.status === 422 && json.errors) {\n            const errors = json.errors;\n            Object.keys(errors).forEach((key: string) => {\n              const item = self.getItemById(key);\n\n              if (item) {\n                item.setError(errors[key]);\n              } else {\n                self\n                  .getItemsByName(key)\n                  .forEach(item => item.setError(errors[key]));\n              }\n            });\n\n            self.updateMessage(\n              json.msg || (options && options.errorMessage) || '验证错误',\n              true\n            );\n          } else {\n            self.updateMessage(\n              json.msg || (options && options.errorMessage),\n              true\n            );\n          }\n\n          throw new ServerError(self.msg);\n        } else {\n          if (options && options.onSuccess) {\n            const ret = options.onSuccess(json);\n\n            if (ret && ret.then) {\n              yield ret;\n            }\n          }\n          self.markSaving(false);\n          self.updateMessage(json.msg || (options && options.successMessage));\n          self.msg &&\n            (getRoot(self) as IRendererStore).notify('success', self.msg);\n          return json.data;\n        }\n      } catch (e) {\n        if ((getRoot(self) as IRendererStore).storeType !== 'RendererStore') {\n          // 已经销毁了，不管这些数据了。\n          return;\n        }\n\n        self.markSaving(false);\n        // console.error(e.stack);`\n        (getRoot(self) as IRendererStore).notify('error', e.message);\n        throw e;\n      }\n    });\n\n    const submit: (\n      fn?: (values: object) => Promise<any>,\n      hooks?: Array<() => Promise<any>>,\n      failedMessage?: string\n    ) => Promise<any> = flow(function* submit(\n      fn: any,\n      hooks?: Array<() => Promise<any>>,\n      failedMessage?: string\n    ) {\n      self.submited = true;\n      self.submiting = true;\n\n      try {\n        let valid = yield validate(hooks);\n\n        if (!valid) {\n          (getRoot(self) as IRendererStore).notify(\n            'error',\n            failedMessage || '表单验证失败，请仔细检查'\n          );\n          throw new Error('验证失败');\n        }\n\n        if (fn) {\n          const diff = difference(self.data, self.pristine);\n          yield fn(\n            createObject(\n              createObject(self.data.__super, {\n                diff: diff,\n                __diff: diff,\n                pristine: self.pristine\n              }),\n              self.data\n            )\n          );\n        }\n      } finally {\n        self.submiting = false;\n      }\n\n      return self.data;\n    });\n\n    const validate: (\n      hooks?: Array<() => Promise<any>>,\n      forceValidate?: boolean\n    ) => Promise<boolean> = flow(function* validate(\n      hooks?: Array<() => Promise<any>>,\n      forceValidate?: boolean\n    ) {\n      self.validating = true;\n      self.validated = true;\n      const items = self.items.concat();\n      for (let i = 0, len = items.length; i < len; i++) {\n        let item = items[i] as IFormItemStore;\n\n        if (!item.validated || forceValidate) {\n          yield item.validate();\n        }\n      }\n\n      if (hooks && hooks.length) {\n        for (let i = 0, len = hooks.length; i < len; i++) {\n          yield hooks[i]();\n        }\n      }\n\n      self.validating = false;\n      return self.valid;\n    });\n\n    const validateFields: (fields: Array<string>) => Promise<boolean> = flow(\n      function* validateFields(fields: Array<string>) {\n        self.validating = true;\n        const items = self.items.concat();\n        let result: Array<boolean> = [];\n        for (let i = 0, len = items.length; i < len; i++) {\n          let item = items[i] as IFormItemStore;\n\n          if (~fields.indexOf(item.name)) {\n            result.push(yield item.validate());\n          }\n        }\n        self.validating = false;\n        return result.every(item => item);\n      }\n    );\n\n    function clearErrors() {\n      const items = self.items.concat();\n      items.forEach(item => item.reset());\n    }\n\n    function reset(cb?: (data: any) => void, resetData: boolean = true) {\n      if (resetData) {\n        self.data = self.pristine;\n      }\n\n      // 值可能变了，重新验证一次。\n      self.validated = false;\n      self.submited = false;\n      self.items.forEach(item => item.reset());\n      cb && cb(self.data);\n    }\n\n    function registryItem(\n      name: string,\n      options?: Partial<SFormItemStore> & {\n        value?: any;\n      }\n    ): IFormItemStore {\n      let item: IFormItemStore;\n\n      self.items.push({\n        identifier: guid(),\n        name\n      } as any);\n\n      item = self.items[self.items.length - 1] as IFormItemStore;\n\n      // 默认值可能在原型上，把他挪到当前对象上。\n      setValueByName(item.name, item.value, false, false);\n\n      options && item.config(options);\n\n      return item;\n    }\n\n    function unRegistryItem(item: IFormItemStore) {\n      detach(item);\n    }\n\n    function beforeDetach() {\n      // 本来是想在组件销毁的时候处理，\n      // 但是 componentWillUnmout 是父级先执行，form 都销毁了 formItem 就取不到 父级就不是 combo 了。\n      if (self.parentStore && self.parentStore.storeType === 'ComboStore') {\n        const combo = self.parentStore as IComboStore;\n        self.items.forEach(item => {\n          if (item.unique) {\n            combo.unBindUniuqueItem(item);\n          }\n        });\n\n        combo.removeForm(self as IFormStore);\n        combo.forms.forEach(item =>\n          item.items.forEach(item => item.unique && item.syncOptions())\n        );\n      }\n\n      self.items.forEach(item => detach(item));\n    }\n\n    function setCanAccessSuperData(value: boolean = true) {\n      self.canAccessSuperData = value;\n    }\n\n    function setInited(value: boolean) {\n      self.inited = value;\n    }\n\n    const setPersistData = debounce(() => {\n      localStorage.setItem(\n        location.pathname + self.path,\n        JSON.stringify(self.data)\n      );\n    }, 250);\n\n    function getPersistData() {\n      self.persistData = true;\n      let data = localStorage.getItem(location.pathname + self.path);\n      if (data) {\n        self.updateData(JSON.parse(data));\n      }\n    }\n\n    function clearPersistData() {\n      localStorage.removeItem(location.pathname + self.path);\n    }\n\n    return {\n      setInited,\n      setValues,\n      setValueByName,\n      trimValues,\n      submit,\n      validate,\n      validateFields,\n      clearErrors,\n      saveRemote,\n      reset,\n      registryItem,\n      unRegistryItem,\n      beforeDetach,\n      syncOptions,\n      setCanAccessSuperData,\n      deleteValueByName,\n      getPersistData,\n      setPersistData,\n      clearPersistData\n    };\n  });\n\nexport type IFormStore = typeof FormStore.Type;\nexport {IFormItemStore};\n"
    ]
}