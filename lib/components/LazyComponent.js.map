{
    "version": 3,
    "file": "LazyComponent.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/LazyComponent.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;;;GAIG;;;AAEH,wDAA0B;AAC1B,0DAA6D;AAiB7D;IAA2C,yCAG1C;IAQC,uBAAY,KAAyB;QAArC,YACE,kBAAM,KAAK,CAAC,SAQb;QAVD,aAAO,GAAY,KAAK,CAAC;QAIvB,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAE/D,KAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,KAAK,CAAC,SAA4B;SAC9C,CAAC;;IACJ,CAAC;IAED,0CAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,4CAAoB,GAApB;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,2CAAmB,GAAnB,UAAoB,OAAgB;QAApC,iBA4BC;QA3BC,IAAI,CAAC,QAAQ,CAAC;YACZ,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YAChE,OAAO;SACR;QAED,IAAI,CAAC,KAAK;aACP,YAAY,EAAE;aACd,IAAI,CACH,UAAA,SAAS;YACP,OAAA,KAAI,CAAC,OAAO;gBACZ,OAAO,SAAS,KAAK,UAAU;gBAC/B,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,SAAS;iBACrB,CAAC;QAJF,CAIE,CACL;aACA,KAAK,CACJ,UAAA,MAAM;YACJ,OAAA,KAAI,CAAC,OAAO;gBACZ,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,cAAM,OAAA,CACf,uCAAK,SAAS,EAAC,oBAAoB,IAAE,MAAM,CAAC,MAAM,CAAC,CAAO,CAC3D,EAFgB,CAEhB;iBACF,CAAC;QALF,CAKE,CACL,CAAC;IACN,CAAC;IAED,8BAAM,GAAN;QACE,IAAM,eAOQ,EANZ,4BAAW,EACX,oCAAe,EACf,0BAAU,EACV,sCAAgB,EAChB,wCAAiB,EACjB,oHACY,CAAC;QAET,IAAA,eAA4C,EAA3C,oBAAO,EAAE,wBAAkC,CAAC;QAEnD,eAAe;QACf,IAAI,eAAe,EAAE;YACnB,OAAO,CACL,8BAAC,gBAAgB,uBACX,gBAAgB,IACpB,iBAAiB,EAAE,iBAAiB,EACpC,QAAQ,EAAE,IAAI,CAAC,mBAAmB;gBAElC,uCAAK,SAAS,EAAC,mBAAmB,IAC/B,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,CACtB,8BAAC,SAAS,uBAAK,IAAI,EAAM,UAAU,EAAI,CACxC,CAAC,CAAC,CAAC,CACF,WAAW,CACZ,CACG,CACW,CACpB,CAAC;SACH;QAED,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,CACL,8BAAC,gBAAgB,uBACX,gBAAgB,IACpB,iBAAiB,EAAE,iBAAiB,EACpC,QAAQ,EAAE,IAAI,CAAC,mBAAmB;gBAElC,uCAAK,SAAS,EAAC,mBAAmB,IAAE,WAAW,CAAO,CACrC,CACpB,CAAC;SACH;aAAM,IAAI,SAAS,EAAE;YACpB,yBAAyB;YACzB,OAAO,8BAAC,SAAS,uBAAK,IAAI,EAAM,UAAU,EAAI,CAAC;SAChD;QAED,OAAO,2CAAM,WAAW,CAAO,CAAC;IAClC,CAAC;IAvGM,0BAAY,GAAG;QACpB,WAAW,EAAE,QAAQ;QACrB,eAAe,EAAE,KAAK;QACtB,iBAAiB,EAAE,IAAI;KACxB,CAAC;IAoGJ,oBAAC;CAAA,AA5GD,CAA2C,eAAK,CAAC,SAAS,GA4GzD;kBA5GoB,aAAa",
    "sourcesContent": [
        "/**\n * @file LazyComponent\n * @description\n * @author fex\n */\n\nimport React from 'react';\nimport VisibilitySensor = require('react-visibility-sensor');\n\nexport interface LazyComponentProps {\n  component?: React.ReactType;\n  getComponent?: () => Promise<React.ReactType>;\n  placeholder?: React.ReactNode;\n  unMountOnHidden?: boolean;\n  childProps?: object;\n  visiblilityProps?: object;\n  [propName: string]: any;\n}\n\nexport interface LazyComponentState {\n  visible: boolean;\n  component?: React.ReactType;\n}\n\nexport default class LazyComponent extends React.Component<\n  LazyComponentProps,\n  LazyComponentState\n> {\n  static defaultProps = {\n    placeholder: '加载中...',\n    unMountOnHidden: false,\n    partialVisibility: true\n  };\n\n  mounted: boolean = false;\n  constructor(props: LazyComponentProps) {\n    super(props);\n\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\n\n    this.state = {\n      visible: false,\n      component: props.component as React.ReactType\n    };\n  }\n\n  componentWillMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleVisibleChange(visible: boolean) {\n    this.setState({\n      visible: visible\n    });\n\n    if (!visible || this.state.component || !this.props.getComponent) {\n      return;\n    }\n\n    this.props\n      .getComponent()\n      .then(\n        component =>\n          this.mounted &&\n          typeof component === 'function' &&\n          this.setState({\n            component: component\n          })\n      )\n      .catch(\n        reason =>\n          this.mounted &&\n          this.setState({\n            component: () => (\n              <div className=\"alert alert-danger\">{String(reason)}</div>\n            )\n          })\n      );\n  }\n\n  render() {\n    const {\n      placeholder,\n      unMountOnHidden,\n      childProps,\n      visiblilityProps,\n      partialVisibility,\n      ...rest\n    } = this.props;\n\n    const {visible, component: Component} = this.state;\n\n    // 需要监听从可见到不可见。\n    if (unMountOnHidden) {\n      return (\n        <VisibilitySensor\n          {...visiblilityProps}\n          partialVisibility={partialVisibility}\n          onChange={this.handleVisibleChange}\n        >\n          <div className=\"visibility-sensor\">\n            {Component && visible ? (\n              <Component {...rest} {...childProps} />\n            ) : (\n              placeholder\n            )}\n          </div>\n        </VisibilitySensor>\n      );\n    }\n\n    if (!visible) {\n      return (\n        <VisibilitySensor\n          {...visiblilityProps}\n          partialVisibility={partialVisibility}\n          onChange={this.handleVisibleChange}\n        >\n          <div className=\"visibility-sensor\">{placeholder}</div>\n        </VisibilitySensor>\n      );\n    } else if (Component) {\n      // 只监听不可见到可见，一旦可见了，就销毁检查。\n      return <Component {...rest} {...childProps} />;\n    }\n\n    return <div>{placeholder}</div>;\n  }\n}\n"
    ]
}